DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS item_requests CASCADE;
DROP TABLE IF EXISTS items CASCADE;
DROP TABLE IF EXISTS bookings CASCADE;
DROP TABLE IF EXISTS comments CASCADE;
DROP INDEX IF EXISTS index_item CASCADE;
DROP INDEX IF EXISTS index_booking CASCADE;

CREATE TABLE IF NOT EXISTS users (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name VARCHAR(255) NOT NULL,
  email VARCHAR(512) NOT NULL,
  CONSTRAINT pk_user PRIMARY KEY (id),
  CONSTRAINT unique_user_email UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS item_requests (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  requestor_id BIGINT NOT NULL,
  description VARCHAR(512) NOT NULL,
  created TIMESTAMP NOT NULL,
  CONSTRAINT pk_request PRIMARY KEY (id),
  CONSTRAINT fk_request_to_users FOREIGN KEY(requestor_id) REFERENCES users(id)
);

CREATE TABLE IF NOT EXISTS items (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  owner_id BIGINT NOT NULL,
  name VARCHAR(255) NOT NULL,
  description VARCHAR(512),
  available BOOLEAN DEFAULT true,
  request_id BIGINT DEFAULT null,
  CONSTRAINT pk_item PRIMARY KEY (id),
  CONSTRAINT fk_items_to_users FOREIGN KEY(owner_id) REFERENCES users(id),
  CONSTRAINT fk_item_to_request FOREIGN KEY(request_id) REFERENCES item_requests(id)
);

CREATE TABLE IF NOT EXISTS bookings (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  booker_id BIGINT NOT NULL,
  item_id BIGINT NOT NULL,
  start_date TIMESTAMP NOT NULL,
  end_date TIMESTAMP NOT NULL,
  status VARCHAR(64) default 'WAITING' NOT NULL,
  CONSTRAINT pk_booking PRIMARY KEY (id),
  CONSTRAINT fk_booking_to_users FOREIGN KEY(booker_id) REFERENCES users(id),
  CONSTRAINT fk_booking_to_items FOREIGN KEY(item_id) REFERENCES items(id)
);

CREATE TABLE IF NOT EXISTS comments
(
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    item_id BIGINT NOT NULL,
    user_id BIGINT NOT NULL,
    text text NOT NULL,
    created TIMESTAMP NOT NULL,
    CONSTRAINT pk_comments PRIMARY KEY (id),
    CONSTRAINT fk_comment_to_items FOREIGN KEY(item_id) REFERENCES items(id),
    CONSTRAINT fk_comment_to_users FOREIGN KEY(user_id) REFERENCES users(id)
);

CREATE INDEX IF NOT EXISTS index_item ON items (lower(name), lower(description));
CREATE INDEX IF NOT EXISTS index_booking ON bookings (booker_id, item_id);